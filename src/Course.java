
import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author 2ndyrGroupB
 */
public class Course extends javax.swing.JFrame {

    Connection con = null;
    Statement stmt = null;
    ResultSet rs = null;

    /**
     * Creates new form Course
     */
    public Course() {
        initComponents();
        con = databaseConnection.connection();
        showCourses();
         groupCourse_id.setEnabled(false);
          delete.setEnabled(false);
        update.setEnabled(false);
//     
    }

    public ArrayList<Courses> courseList() {
        ArrayList<Courses> courseList = new ArrayList<>();
        try {

            String query = "SELECT * FROM course";
            stmt = con.createStatement();
            rs = stmt.executeQuery(query);

            Courses course;
            while (rs.next()) {
                course = new Courses(rs.getInt("course_id"), rs.getString("courseName"),rs.getInt("courseGroup_id"), rs.getString("courseGroup"));
                courseList.add(course);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return courseList;
    }

    public void showCourses() {
        ArrayList<Courses> list = courseList();
        DefaultTableModel model = (DefaultTableModel) tableCourses.getModel();
        Object[] row = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getCourseID();
            row[1] = list.get(i).getCourseName();
            row[2] = list.get(i).getGroupID();
            row[3] = list.get(i).getCourseGroup();

            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        mainMenu = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCourses = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        sfed = new javax.swing.JLabel();
        course_id = new javax.swing.JTextField();
        course = new javax.swing.JLabel();
        inputCourse = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        groupCourse_id = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        courseGroup = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 153, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 10, 10, 10, new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 320, -1));

        update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                updateKeyReleased(evt);
            }
        });
        jPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 390, -1, -1));

        delete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, -1, -1));

        mainMenu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        mainMenu.setText("> Main Menu");
        mainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuActionPerformed(evt);
            }
        });
        jPanel1.add(mainMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("All Courses");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 20, -1, -1));

        tableCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "CourseName", "Group_ID", "CourseGroup"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCourses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCoursesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCourses);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 490, 360));

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 3, 24)); // NOI18N
        jLabel2.setText("Course Management");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        sfed.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sfed.setText("ID:");
        jPanel1.add(sfed, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 40, -1));

        course_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course_idActionPerformed(evt);
            }
        });
        jPanel1.add(course_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 160, 30));

        course.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        course.setText("Course:");
        jPanel1.add(course, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));
        jPanel1.add(inputCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 160, 29));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Group ID:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));
        jPanel1.add(groupCourse_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 160, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Create Group :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 110, -1));
        jPanel1.add(courseGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 160, 30));

        submit.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        submit.setText("Create");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        jPanel1.add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, -1, -1));

        reset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        jPanel1.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 70, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\2ndyrGroupB\\Desktop\\judyFilesOTHERPC\\SchoolManagementSystem\\course3.png")); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 290, 430));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
         int opt = JOptionPane.showConfirmDialog(null, "Are you sure to Delete", "Delete", JOptionPane.YES_NO_OPTION);
        if (opt == 0) {
            try {
                stmt = con.createStatement();
                int row = tableCourses.getSelectedRow();
                String Id = groupCourse_id.getText();

                String query = "DELETE FROM course WHERE courseGroup_id = " + Id;
//                PreparedStatement preparedStmt = con.prepareStatement(query);
                Statement stmt = con.prepareStatement(query);
                stmt.executeUpdate(query);
                DefaultTableModel model = (DefaultTableModel) tableCourses.getModel();
                model.setRowCount(0);
                showCourses();
//            Reset();
//            
//            
                JOptionPane.showMessageDialog(null, "Deleted SUCESSFULLY!");
            } catch (Exception e) {
                System.out.println(e);
            }
        }
           

    }//GEN-LAST:event_deleteActionPerformed

    private void mainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        Menu menu = new Menu();
        menu.setVisible(true);

    }//GEN-LAST:event_mainMenuActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
          try {
            stmt = con.createStatement();

            int row = tableCourses.getSelectedRow();
            String value = ( tableCourses.getModel().getValueAt(row, 2).toString());
            String query = "UPDATE course SET course_id= ?, courseName = ?,courseGroup = ? WHERE courseGroup_id = " + value;

            PreparedStatement preparedStmt = con.prepareStatement(query);

            preparedStmt.setString(1, course_id.getText());
           preparedStmt.setString(2, inputCourse.getText());
//            preparedStmt.setString(3, groupCourse_id.getText());
            preparedStmt.setString(3, courseGroup.getText());
           
       

            preparedStmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Updated SUCESSFULLY!");
            DefaultTableModel model = (DefaultTableModel) tableCourses.getModel();
            model.setRowCount(0);
            showCourses();
//            //con.close();
        } catch (Exception e) {
            System.out.println(e);
        }      
    }//GEN-LAST:event_updateActionPerformed

    private void tableCoursesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCoursesMouseClicked
        // TODO add your handling code here:
           int i = tableCourses.getSelectedRow();
        TableModel model = tableCourses.getModel();
        course_id.setText(model.getValueAt(i, 0).toString());
        inputCourse.setText(model.getValueAt(i, 1).toString());
        groupCourse_id.setText(model.getValueAt(i, 2).toString());
        courseGroup.setText(model.getValueAt(i, 3).toString());;
        delete.setEnabled(true);
        update.setEnabled(true);
        submit.setEnabled(false);

    }//GEN-LAST:event_tableCoursesMouseClicked
    
    private void course_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_course_idActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        try {
            stmt = con.createStatement();
            String query = "INSERT INTO course(course_id,courseName,courseGroup)VALUES(?,?,?)";
            PreparedStatement preparedStmt = con.prepareStatement(query);
            int courseID = Integer.parseInt(course_id.getText());

            preparedStmt.setInt(1, courseID);
            preparedStmt.setString(2, inputCourse.getText());
             preparedStmt.setString(3, courseGroup.getText());
          

            preparedStmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Added SUCESSFULLY!");
            DefaultTableModel model = (DefaultTableModel) tableCourses.getModel();
            model.setRowCount(0);
            showCourses();
            submit.setEnabled(false);
            //            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_submitActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        
         course_id.setText("");
        inputCourse.setText(""); 
        courseGroup.setText("");
       submit.setEnabled(true);
        delete.setEnabled(false);
        update.setEnabled(false);
    }//GEN-LAST:event_resetActionPerformed

    private void updateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_updateKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Teachers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Teachers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Teachers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Teachers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Course().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel course;
    private javax.swing.JTextField courseGroup;
    private javax.swing.JTextField course_id;
    private javax.swing.JButton delete;
    private javax.swing.JTextField groupCourse_id;
    private javax.swing.JTextField inputCourse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mainMenu;
    private javax.swing.JButton reset;
    private javax.swing.JLabel sfed;
    private javax.swing.JButton submit;
    private javax.swing.JTable tableCourses;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

}
